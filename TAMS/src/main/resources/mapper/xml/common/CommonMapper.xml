<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.trito.tams.web.common.mapper.CommonMapper">

	<!-- 부서팝업 조회 -->
	<select id="selectDeptPopupList" resultType="kr.co.trito.tams.web.common.dto.DeptDto" parameterType="kr.co.trito.tams.comm.util.search.SearchCondition">
		WITH RECURSIVE CTE AS ( 
		    SELECT
				DEPT_CD ,
				DEPT_NM ,
				UPP_DEPT_CD ,
				DEPT_CHRGR_ID,
				1 AS LEVEL
			FROM
				TB_DEPT
			WHERE
				UPP_DEPT_CD IS NULL
				AND USE_YN = 'Y'
			UNION ALL
			SELECT
				B.DEPT_CD ,
				B.DEPT_NM ,
				B.UPP_DEPT_CD ,
				B.DEPT_CHRGR_ID,
				C.LEVEL + 1 AS LEVEL
		    FROM TB_DEPT B 
		    INNER JOIN CTE C ON B.UPP_DEPT_CD = C.DEPT_CD 
		    ) 
		SELECT DEPT_CD        AS deptCd
		     , DEPT_NM        AS deptNm 
		     , DEPT_CHRGR_ID  AS deptChrgrId
		     , UPP_DEPT_CD    AS uppDeptCd
		  FROM CTE 
	   	WHERE 1=1
	   	<if test="params.searchText!=null">
	   	  AND (DEPT_CD LIKE CONCAT('%', #{params.searchText}, '%') OR DEPT_NM LIKE CONCAT('%', #{params.searchText}, '%') )
	   	</if>
		ORDER BY DEPT_CD
	</select>
	
	<!-- 부서 팝업(트리) 조회 -->
	<select id="selectDeptTree" resultType="kr.co.trito.tams.web.common.dto.CodeTreeDto" parameterType="map">
		WITH RECURSIVE CTE (dept_cd, dept_nm, upp_dept_cd, sort_odr) AS
		(
			SELECT T1.dept_cd, T1.dept_nm, IFNULL(T1.upp_dept_cd,'#') upp_dept_cd, T1.sort_odr
			  FROM TB_DEPT T1
   			 WHERE upp_dept_cd IS NULL
			UNION ALL
			SELECT T2.dept_cd, T2.dept_nm, T2.upp_dept_cd, T2.sort_odr
			  FROM TB_DEPT T2
			 INNER JOIN CTE ON T2.upp_dept_cd = CTE.dept_cd
		)
		SELECT CTE.dept_cd AS id, CTE.dept_nm AS text, CTE.sort_odr AS depth, CTE.upp_dept_cd AS parent 
		  FROM CTE
		ORDER BY CTE.dept_cd, CTE.sort_odr;
	</select>

	<!-- 사용자팝업 조회 -->
	<select id="selectUserPopupList" resultType="kr.co.trito.tams.web.system.user.dto.UserMngDto" parameterType="kr.co.trito.tams.comm.util.search.SearchCondition">
		 SELECT  USER_ID       AS userId
			     , USER_PW      AS userPw
			     , DEPT_CD      AS deptCd
			     , (SELECT B.DEPT_NM FROM TB_DEPT B WHERE B.DEPT_CD = A.DEPT_CD)          AS deptNm
			     , USER_NM      AS userNm
			     , EMAIL        AS email
			     , TELNO        AS telno 
			     , SEX          AS sex
			     , USE_YN       AS useYn
			     , REGR         AS regr
			     , REGDT        AS regdt
			     , UPDR         AS updr
			     , UPDT         AS updt
			     ,'' as chk
			  FROM TB_USER A
			 WHERE 1=1
	   	<if test="params.searchText!=null">
	   	  AND (USER_ID LIKE CONCAT('%', #{params.searchText}, '%') OR USER_NM LIKE CONCAT('%', #{params.searchText}, '%') )
	   	</if>
		ORDER BY DEPT_CD
	</select>
	
	<!-- 첨부파일 목록 조회 -->
	<select id="selectFileList" resultType="kr.co.trito.tams.comm.util.file.FileDto" parameterType="kr.co.trito.tams.comm.util.search.SearchCondition">
		    SELECT   FILE_ID                AS fileId
					,RFNC_KEY1              AS rfncKey1
					,FILE_NM                AS fileNm
					,ORG_FILE_NM            AS orgFileNm
					,FILE_SIZE              AS fileSize
					,SORT_ODR               AS sortOdr
					,FILE_DOWNLOAD_URI      AS fileDownloadUri
					,DWLD_CNT               AS dwldCnt
					,USE_YN                 AS userYn
					,UPDR                   AS updr
					,UP_DT                  AS upDt
					,REGR                   AS regr
					,REG_DT                 AS regDt
			 FROM TB_COM_FILE
		   	WHERE 1=1
		   	  AND RFNC_KEY1 = #{params.searchText}
			  AND USE_YN = 'Y'
		ORDER BY SORT_ODR
	</select>
	
	
	<insert id="saveFileInfo" parameterType="kr.co.trito.tams.comm.util.file.FileDto" useGeneratedKeys="true" keyProperty="fileId">
		INSERT INTO TB_COM_FILE(RFNC_KEY1, FILE_NM, ORG_FILE_NM, FILE_SIZE, SORT_ODR, FILE_DOWNLOAD_URI, DWLD_CNT, USE_YN, REGR, UPDR)
		                 VALUES( #{rfncKey1}, #{fileNm}, #{orgFileNm}, #{fileSize}, #{sortOdr}, #{fileDownloadUri}, #{dwldCnt}, #{useYn}, #{regr}, #{updr})
	</insert>
	
	<update id="deleteFile" parameterType="kr.co.trito.tams.comm.util.file.FileDto">
		UPDATE TB_COM_FILE 
		   SET USE_YN   = 'N'
		     , UPDR     = #{updr}
		 WHERE FILE_ID = #{fileId}
	</update>
	
	<update id="updateDwldCnt" parameterType="kr.co.trito.tams.comm.util.file.FileDto">
		UPDATE TB_COM_FILE 
		   SET DWLD_CNT = DWLD_CNT + 1
		     , UPDR     = #{updr}
		 WHERE FILE_ID = #{fileId}
	</update>
	
	<!-- 화면 권한 여부 조회 -->
	<select id="selectMenuRoleCheck" resultType="kr.co.trito.tams.web.common.dto.MenuRoleCheckDto" parameterType="kr.co.trito.tams.web.common.dto.MenuRoleCheckDto">
		SELECT A.ROLE_ID ,
			   A.MENU_ID ,
			   CASE WHEN IFNULL(A.INQR_YN,'N') OR A.INQR_YN = '' THEN 'N' ELSE A.INQR_YN END INQR_YN,
			   CASE WHEN IFNULL(A.UPD_YN ,'N') OR A.UPD_YN  = '' THEN 'N' ELSE A.UPD_YN  END UPD_YN ,
			   CASE WHEN IFNULL(A.REG_YN ,'N') OR A.REG_YN  = '' THEN 'N' ELSE A.REG_YN  END REG_YN ,
			   CASE WHEN IFNULL(A.DEL_YN ,'N') OR A.DEL_YN  = '' THEN 'N' ELSE A.DEL_YN  END DEL_YN
		 FROM TB_COM_MENU_ROLE A
		WHERE 1 = 1
		  AND A.USE_YN = 'Y'
		  AND A.ROLE_ID = #{roleId}
		  AND A.MENU_ID = #{menuId}
	</select>
	
	<!-- 사용자 부서정보 조회 -->
	<select id="selectUserDeptInfo" resultType="map" parameterType="map">
		SELECT A.DEPT_NM deptNm
		      ,B.DEPT_NM upDeptNm
		      ,C.USER_NM userNm
		  FROM TB_DEPT A
		     , TB_DEPT B 
		     , TB_USER C
		 WHERE A.DEPT_CD     = C.dept_cd 
		   AND A.UPP_DEPT_CD = B.DEPT_CD 
		   AND C.USER_ID     = #{userId}
	</select>
	
	<!-- TB_PO 정보등록 -->
	<insert id="saveInvestInfo" parameterType="kr.co.trito.tams.comm.util.file.excel.InvDto">
		INSERT INTO TB_INV_MAS(INV_NO, INV_DT, INV_REQR, INV_TTL, INV_QTY, INV_AMT, ACTG_YEAR, REGR)
                VALUES
                (#{invNo}, #{invDt}, #{invReqr}, #{invTtl}, 0, 0, '-', #{regr})
                ON DUPLICATE KEY
                UPDATE INV_DT =  #{invDt}, INV_REQR = #{invReqr}, INV_TTL = #{invTtl}, REGR = #{regr}
	</insert>
	
	<!-- TB_PO 정보등록 -->
	<insert id="savePoInfo" parameterType="java.util.List">
		INSERT INTO TB_PO(PO_NO, INV_NO, MFGD_NM, QTY, REGR)
                   VALUES
                   <foreach collection="list" item="inv" separator=" , ">
                   ('${inv.poNo}', '${inv.invNo}', '${inv.mfgdNm}', '${inv.qty}', '${inv.regr}')
                   </foreach>
	</insert>
	
	
	<!-- 공통코드(트리) 조회 -->
	<select id="selectCodeTree" resultType="kr.co.trito.tams.web.common.dto.CodeTreeDto" parameterType="map">
		WITH RECURSIVE CTE (CODE_ID, CODE_NM, CODE_LVL, UPP_CODE_ID, SORT_ODR) AS
		(
			SELECT T1.CODE_ID, T1.CODE_NM, T1.CODE_LVL, IFNULL(T1.UPP_CODE_ID,'#') UPP_CODE_ID, T1.SORT_ODR 
			  FROM TB_COM_CODE T1
			 WHERE T1.UPP_CODE_ID IS NULL
			   AND T1.CODE_GRP_ID = #{codeGrpId}
			UNION ALL
			SELECT T2.CODE_ID, T2.CODE_NM, T2.CODE_LVL, T2.UPP_CODE_ID, T2.SORT_ODR 
			  FROM TB_COM_CODE T2
			 INNER JOIN CTE ON T2.UPP_CODE_ID = CTE.CODE_ID
		)
		SELECT CTE.CODE_ID AS id, CTE.CODE_NM AS text, CTE.CODE_LVL AS depth, CTE.UPP_CODE_ID AS parent 
		  FROM CTE
		ORDER BY CTE.CODE_ID, CTE.SORT_ODR
	</select>

	
	<!-- 챠트샘플1 -->
	<select id="selectChart1" resultType="map" parameterType="map">
		SELECT '설비자산' as asset_gbn 
		       ,300       as asset_amt
		FROM DUAL       
		UNION ALL       
		SELECT 'IT자산' as asset_gbn 
		       ,10     as asset_amt
		FROM DUAL       
		UNION ALL       
		SELECT 'OA자산' as asset_gbn 
		       ,10     as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '방송자산' as asset_gbn 
		       ,10      as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '보안장비' as asset_gbn 
		       ,2       as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '총무자산' as asset_gbn 
		       ,20      as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '일반비품' as asset_gbn 
		       ,10      as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '기타' as asset_gbn 
		       ,5    as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '건축물' as asset_gbn 
		       ,1000  as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '구축물' as asset_gbn 
		       ,300   as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '토지' as asset_gbn 
		       ,1500 as asset_amt       
		FROM DUAL
		UNION ALL       
		SELECT '소프트웨어' as asset_gbn 
		       ,20       as asset_amt       
		FROM DUAL
	</select>
	
	<!-- 챠트샘플2 -->
	<select id="selectChart2" resultType="map" parameterType="map">
		SELECT '정상' as asset_status 
		       ,85   as asset_qty
		FROM DUAL       
		UNION ALL       
		SELECT '유휴' as asset_status 
		       ,10   as asset_qty
		FROM DUAL       
		UNION ALL       
		SELECT '재사용' as asset_status 
		       ,1     as asset_qty       
		FROM DUAL
		UNION ALL       
		SELECT '매각' as asset_status 
		       ,2    as asset_qty       
		FROM DUAL
		UNION ALL       
		SELECT '폐기' as asset_status 
		       ,2    as asset_qty       
		FROM DUAL
	</select>
	
</mapper>