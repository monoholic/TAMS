<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.trito.tams.web.aset.update.reqmas.mapper.ReqMasMapper">
   	<select id="selectReqInqrList" resultType="kr.co.trito.tams.web.aset.update.reqmas.dto.ReqMasDto" parameterType="kr.co.trito.tams.comm.util.search.SearchCondition">
   		SELECT req_no
		     , req_type
		     , (SELECT code_nm
		          FROM tb_com_code
		         WHERE code_id = A.req_type) AS req_type_nm
		     , req_nm
		     , DATE_FORMAT(req_dt, '%Y-%m-%d') AS req_dt
		     , reqtr
		     , (SELECT dept_nm
	              FROM tb_dept
	             WHERE dept_cd = A.dept_cd ) AS reqtr_dept
		     , appv_doc_id
		     , req_rsn
		     , req_stus
		     , (SELECT code_nm
		          FROM tb_com_code
		         WHERE code_id = A.req_stus ) AS req_stus_nm
		     , move_pupos
		     , move_dt
		     , tkout_sche_yn
		     , tkout_sche_dt
		     , tkout_yn
		     , tkout_dt
		     , rtkin_yn
		     , rtkin_dt
		     , prgs_dcont_yn
		     , updr
		     , up_dt
		     , regr
		     , reg_dt
		     , dept_cd
		     , (SELECT count(*)
		          FROM tb_aset_req
		         WHERE req_no = A.req_no) AS aset_cnt
		FROM (
			SELECT
			       req_no
			     , req_type
			     , req_nm
			     , req_dt
			     , reqtr
			     , appv_doc_id
			     , req_rsn
			     , req_stus
			     , move_pupos
			     , move_dt
			     , tkout_sche_yn
			     , tkout_sche_dt
			     , tkout_yn
			     , tkout_dt
			     , rtkin_yn
			     , rtkin_dt
			     , prgs_dcont_yn
			     , updr
			     , up_dt
			     , regr
			     , reg_dt
			     , (SELECT dept_cd
	  				  FROM tb_user
	  		         WHERE user_id = #{params.userId}) AS dept_cd
			 FROM TB_REQ_MAS
			 WHERE 1=1
			 <if test="params.userId != null">
	     		AND reqtr = #{params.userId} <!-- 접속한 아이디 비교 -->
	     		<!-- 작성한 사용자의 부서코드와 또 다른 접속자의 코드가 일치하면 조회. -->
	     		OR (SELECT dept_cd
	  				  FROM tb_user
	  		         WHERE user_id = #{params.userId}) = (SELECT dept_cd
			  				      							FROM tb_user
			  		             						   WHERE user_id= reqtr)
	     	 </if>
	     ) AS A
	     WHERE 1=1
	     	<if test="params.reqNo != null">
				AND (req_no LIKE CONCAT('%', #{params.reqNo}, '%'))
		 	</if>
		 	<if test="params.fromDate != null and (params.toDate !=null)">
				AND (req_dt between #{params.fromDate} and #{params.toDate})
	 		</if>
	 		<if test="params.reqNm != null">
				AND (req_nm LIKE CONCAT('%', #{params.reqNm}, '%'))
		 	</if>
		 	<if test="params.deptCd1 != null">
				AND (dept_cd LIKE CONCAT(#{params.deptCd1}, '%'))
		 	</if>
		 	<if test="params.deptCd2 != null">
				AND (dept_cd LIKE CONCAT(#{params.deptCd2}, '%'))
		 	</if>
		 	<if test="params.reqtr != null">
				AND (reqtr LIKE CONCAT('%', #{params.reqtr}, '%'))
		 	</if>
		 	<if test="params.asetNo != null">
				AND ((SELECT req_no
					   FROM tb_aset_req
					  WHERE aset_no = #{params.asetNo}) = req_no)
		 	</if>
		 	<if test="params.reqStus != null">
				AND (req_stus LIKE CONCAT('%', #{params.reqStus}, '%'))
		 	</if>
		 	
	  	 ORDER BY req_no
   	</select>
   	
   	<select id="selectReqInqrExcelList" resultType="kr.co.trito.tams.web.aset.update.reqmas.dto.ReqMasExcelDto" parameterType="kr.co.trito.tams.comm.util.search.SearchCondition">
   		SELECT req_no
		     , req_type
		     , (SELECT code_nm
		          FROM tb_com_code
		         WHERE code_id = A.req_type) AS req_type_nm
		     , req_nm
		     , DATE_FORMAT(req_dt, '%Y-%m-%d') AS req_dt
		     , reqtr
		     , (SELECT dept_nm
	              FROM tb_dept
	             WHERE dept_cd = A.dept_cd ) AS reqtr_dept
		     , appv_doc_id
		     , req_rsn
		     , req_stus
		     , (SELECT code_nm
		          FROM tb_com_code
		         WHERE code_id = A.req_stus ) AS req_stus_nm
		     , move_pupos
		     , move_dt
		     , tkout_sche_yn
		     , tkout_sche_dt
		     , tkout_yn
		     , tkout_dt
		     , rtkin_yn
		     , rtkin_dt
		     , prgs_dcont_yn
		     , updr
		     , up_dt
		     , regr
		     , reg_dt
		     , dept_cd
		     , (SELECT count(*)
		          FROM tb_aset_req
		         WHERE req_no = A.req_no) AS aset_cnt
		FROM (
			SELECT
			       req_no
			     , req_type
			     , req_nm
			     , req_dt
			     , reqtr
			     , appv_doc_id
			     , req_rsn
			     , req_stus
			     , move_pupos
			     , move_dt
			     , tkout_sche_yn
			     , tkout_sche_dt
			     , tkout_yn
			     , tkout_dt
			     , rtkin_yn
			     , rtkin_dt
			     , prgs_dcont_yn
			     , updr
			     , up_dt
			     , regr
			     , reg_dt
			     , (SELECT dept_cd
	  				  FROM tb_user
	  		         WHERE user_id = #{params.userId}) AS dept_cd
			 FROM TB_REQ_MAS
			 WHERE 1=1
			 <if test="params.userId != null">
	     		AND reqtr = #{params.userId} <!-- 접속한 아이디 비교 -->
	     		<!-- 작성한 사용자의 부서코드와 또 다른 접속자의 코드가 일치하면 조회. -->
	     		OR (SELECT dept_cd
	  				  FROM tb_user
	  		         WHERE user_id = #{params.userId}) = (SELECT dept_cd
			  				      							FROM tb_user
			  		             						   WHERE user_id= reqtr)
	     	 </if>
	     ) AS A
	     WHERE 1=1
	     	<if test="params.reqNo != null">
				AND (req_no LIKE CONCAT('%', #{params.reqNo}, '%'))
		 	</if>
		 	<if test="params.fromDate != null and (params.toDate !=null)">
				AND (req_dt between #{params.fromDate} and #{params.toDate})
	 		</if>
	 		<if test="params.reqNm != null">
				AND (req_nm LIKE CONCAT('%', #{params.reqNm}, '%'))
		 	</if>
		 	<if test="params.deptCd1 != null">
				AND (dept_cd LIKE CONCAT(#{params.deptCd1}, '%'))
		 	</if>
		 	<if test="params.deptCd2 != null">
				AND (dept_cd LIKE CONCAT(#{params.deptCd2}, '%'))
		 	</if>
		 	<if test="params.reqtr != null">
				AND (reqtr LIKE CONCAT('%', #{params.reqtr}, '%'))
		 	</if>
		 	<if test="params.asetNo != null">
				AND ((SELECT req_no
					   FROM tb_aset_req
					  WHERE aset_no = #{params.asetNo}) = req_no)
		 	</if>
		 	<if test="params.reqStus != null">
				AND (req_stus LIKE CONCAT('%', #{params.reqStus}, '%'))
		 	</if>
		 	
	  	 ORDER BY req_no
   	</select>
   	
   	<select id="selectCountReqInqr" resultType="int" parameterType="kr.co.trito.tams.comm.util.search.SearchCondition"> 	 	
		SELECT count(*) AS cnt
		FROM (
			SELECT
			       req_no
			     , req_dt
			     , (SELECT dept_cd
	  				  FROM tb_user
	  		         WHERE user_id = #{params.userId}) AS dept_cd
	  		     , req_nm
	  		     , reqtr
	  		     , req_stus
			 FROM TB_REQ_MAS
			 WHERE 1=1
			 <if test="params.userId != null">
	     		AND reqtr = #{params.userId}
	     		OR (SELECT dept_cd
	  				  FROM tb_user
	  		         WHERE user_id = #{params.userId}) = (SELECT dept_cd
			  				      							FROM tb_user
			  		             						   WHERE user_id= reqtr)
	     	 </if>
	     ) AS A
	     WHERE 1=1
	     	<if test="params.reqNo != null">
				AND (req_no LIKE CONCAT('%', #{params.reqNo}, '%'))
		 	</if>
		 	<if test="params.fromDate != null and (params.toDate !=null)">
				AND (req_dt between #{params.fromDate} and #{params.toDate})
	 		</if>
	 		<if test="params.reqNm != null">
				AND (req_nm LIKE CONCAT('%', #{params.reqNm}, '%'))
		 	</if>
		 	<if test="params.deptCd1 != null">
				AND (dept_cd LIKE CONCAT(#{params.deptCd1}, '%'))
		 	</if>
		 	<if test="params.deptCd2 != null">
				AND (dept_cd LIKE CONCAT(#{params.deptCd2}, '%'))
		 	</if>
		 	<if test="params.reqtr != null">
				AND (reqtr LIKE CONCAT('%', #{params.reqtr}, '%'))
		 	</if>
		 	<if test="params.asetNo != null">
				AND ((SELECT req_no
					   FROM tb_aset_req
					  WHERE aset_no = #{params.asetNo}) = req_no)
		 	</if>
		 	<if test="params.reqStus != null">
				AND (req_stus LIKE CONCAT('%', #{params.reqStus}, '%'))
		 	</if>
   	</select>
   	
   	<insert id="reqInqrInsert" parameterType="kr.co.trito.tams.web.aset.update.reqmas.dto.ReqMasDto" useGeneratedKeys="true" keyProperty="req_no">
   		INSERT INTO tb_req_mas (req_type, req_nm, req_dt, reqtr, appv_doc_id, req_rsn, req_stus, move_pupos, move_dt, tkout_sche_yn, tkout_sche_dt, tkout_yn, tkout_dt, rtkin_yn, rtkin_dt, prgs_dcont_yn, regr, reg_dt)
   		VALUES (#{reqType}, #{reqNm}, current_timestamp(),  #{reqtr},  #{appvDocId},  #{reqRsn},  #{reqStus},  #{movePupos},  #{moveDt},  #{tkoutScheYn},  #{tkoutScheDt},  #{tkoutYn},  #{tkoutDt},  #{rtkinYn},  #{rtKinDt}, #{prgsDcontYn} , #{regr} , current_timestamp())
   	</insert>
   	
   	<update id="reqInqrUpdate" parameterType="kr.co.trito.tams.web.aset.update.reqmas.dto.ReqMasDto">
		UPDATE tb_req_mas         
		   SET req_type      = #{reqType}
		     , req_nm 	     = #{reqNm}
		     , reqtr         = #{reqtr}
		     , appv_doc_id   = #{appvDocId}
		     , req_rsn       = #{reqRsn}
		     , req_stus      = #{reqStus}
			 , move_pupos    = #{movePupos}
			 , move_dt       = #{moveDt}
			 , tkout_sche_yn = #{tkoutScheYn}
			 , tkout_sche_dt = #{tkoutScheDt}
			 , tkout_yn      = #{tkoutYn}
			 , tkout_dt      = #{tkoutDt}
			 , rtkin_yn      = #{rtkinYn}
			 , rtkin_dt      = #{rtKinDt}
			 , prgs_dcont_yn = #{prgsDcontYn}
			 , updr          = #{updr}
			 , up_dt         = current_timestamp()
		WHERE req_no = #{reqNo}         
	</update>
   	
   	<delete id="reqInqrDelete" parameterType="kr.co.trito.tams.web.aset.update.reqmas.dto.ReqMasDto">
		DELETE 
		FROM TB_REQ_MAS
        WHERE req_no = #{reqNo}
	</delete>
   	
   	<select id="selectReqTypeList" resultType="kr.co.trito.tams.web.standard.code.dto.CodeDto" parameterType="String">
	   	SELECT code_id, code_nm
		FROM tb_com_code
		WHERE code_grp_id= "REQ_TYPE"
   	</select>
   	
   	<select id="selectReqStusList" resultType="kr.co.trito.tams.web.standard.code.dto.CodeDto" parameterType="String">
	   	SELECT code_id, code_nm
		FROM tb_com_code
		WHERE code_grp_id="APPR_STATUS"
   	</select>
</mapper>